/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

namespace BinaryData
{

//================== lua-16.png ==================
static const unsigned char temp_binary_data_0[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,1,24,73,68,65,84,56,141,149,147,61,78,3,49,16,133,223,216,102,181,252,72,81,138,40,74,131,4,71,200,17,16,53,125,202,228,14,72,217,2,25,87,4,137,75,80,114,11,10,
106,238,145,52,9,18,18,171,104,226,161,8,113,204,254,37,251,26,91,99,127,207,51,242,12,161,165,140,113,83,102,255,180,221,171,140,218,26,0,86,254,25,54,189,176,143,169,140,217,206,170,236,104,127,169,12,198,82,138,62,147,68,61,51,203,117,92,130,58,4,
143,199,87,16,121,196,102,99,135,163,209,229,27,0,36,201,201,93,167,147,14,153,237,140,170,234,138,181,88,220,163,215,59,7,0,204,231,223,24,12,94,126,68,220,89,200,204,24,55,173,131,1,4,24,0,250,253,11,136,224,52,102,84,83,221,0,48,153,188,150,246,49,
67,77,233,239,212,237,166,16,1,86,171,60,138,58,2,42,190,177,74,203,101,94,123,166,142,49,40,138,136,56,24,24,163,178,182,6,90,211,67,48,219,46,86,210,212,32,207,185,142,41,200,133,6,252,107,36,149,173,215,252,117,12,90,204,88,3,128,247,239,31,90,223,
192,123,185,61,4,23,103,162,52,141,81,91,203,238,188,105,152,126,1,241,29,109,224,248,198,121,57,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* lua16_png = (const char*) temp_binary_data_0;

//================== lua-32.png ==================
static const unsigned char temp_binary_data_1[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,32,0,0,0,32,8,6,0,0,0,115,122,122,244,0,0,5,54,73,68,65,84,88,133,189,150,107,108,83,101,24,199,255,239,123,78,47,235,122,177,237,202,50,24,142,49,32,97,42,48,8,226,5,89,100,16,65,72,70,204,8,32,137,
132,24,3,146,8,209,152,176,193,88,41,12,8,160,120,201,34,16,140,176,15,106,36,40,34,36,154,96,2,36,98,48,192,46,162,136,72,22,182,193,230,24,237,232,189,61,59,231,60,126,88,90,183,222,104,65,124,62,157,247,185,253,254,231,205,123,99,248,31,204,110,223,
109,242,251,163,47,9,2,115,136,34,107,245,251,235,47,196,98,236,81,195,117,186,237,243,36,73,254,130,8,142,56,148,241,31,172,86,117,153,199,227,242,241,71,9,183,217,26,199,72,146,252,205,112,56,0,16,169,11,124,62,254,9,0,60,82,1,129,128,178,138,8,166,
84,49,69,81,151,143,30,189,211,46,102,219,172,184,248,125,219,157,59,225,89,170,42,79,34,130,13,32,98,140,185,181,90,225,47,135,195,120,161,179,243,237,123,201,16,140,75,215,143,8,66,48,40,148,100,20,176,116,233,81,225,228,201,107,75,37,73,89,123,251,
182,111,54,17,132,132,54,144,101,25,93,93,30,89,20,157,103,52,26,225,64,56,172,124,11,184,84,0,96,12,29,233,122,51,166,202,38,147,120,51,237,34,212,235,93,207,75,18,29,80,85,122,50,147,200,68,227,156,181,232,116,108,109,56,236,188,88,80,208,88,228,118,
15,254,65,4,75,98,158,32,176,35,138,178,117,117,202,53,160,213,186,106,163,81,245,92,174,112,0,80,85,154,30,137,168,231,181,90,215,250,187,119,235,123,13,6,113,9,231,236,239,225,57,162,200,191,179,217,10,222,2,82,108,67,65,216,186,87,81,232,221,92,160,
99,198,152,177,106,213,84,148,150,90,209,209,49,128,230,230,54,244,244,248,145,151,39,238,8,135,183,212,23,21,29,52,184,221,253,85,68,170,221,96,208,180,123,189,117,173,177,218,17,2,180,218,109,27,36,73,249,48,23,120,85,85,41,142,31,95,14,147,73,23,247,
249,124,81,84,87,127,137,179,103,111,66,167,19,222,136,70,27,62,77,87,31,23,96,48,108,155,26,14,43,23,137,160,201,22,110,52,106,209,209,177,1,14,71,126,82,172,175,47,128,178,178,143,16,10,13,134,141,70,161,194,239,111,248,51,85,143,248,26,136,68,212,
143,115,129,3,192,252,249,101,41,225,0,80,88,104,68,85,213,120,16,33,47,16,80,62,72,215,131,15,253,201,142,74,85,165,57,185,192,1,160,160,192,144,49,110,183,15,197,137,176,208,98,217,53,35,173,128,72,68,126,61,87,56,0,180,182,246,102,140,183,181,253,
187,248,3,1,41,37,131,59,157,78,174,170,234,203,15,34,224,210,165,30,156,58,117,61,101,236,196,137,107,9,2,105,81,74,1,251,246,9,101,170,10,123,204,161,209,8,88,184,112,34,4,33,187,107,98,197,138,99,104,110,110,131,44,171,0,0,89,86,113,248,112,43,86,
174,252,122,68,158,162,208,227,5,5,251,138,18,235,153,193,176,125,65,40,36,127,31,115,88,173,121,240,120,54,194,100,218,137,64,64,202,74,196,80,157,30,99,199,90,208,213,229,197,189,123,145,148,57,122,189,248,66,36,178,229,167,225,62,49,18,33,115,214,
148,12,54,48,16,193,192,64,106,112,204,6,7,213,164,155,145,139,34,228,108,33,155,55,207,65,77,77,121,124,92,91,59,27,203,150,13,157,214,115,231,150,226,202,149,117,240,120,54,162,187,251,29,172,94,93,145,170,69,18,139,107,181,66,127,182,2,26,27,231,198,
183,22,0,236,218,53,47,190,21,155,154,22,193,233,60,3,155,109,55,106,106,190,194,158,61,243,147,234,117,186,100,150,104,54,179,171,193,32,136,232,225,158,103,21,21,251,161,40,132,113,227,30,195,196,137,118,232,245,35,111,122,198,152,108,177,56,174,135,
66,35,235,120,79,207,38,55,99,248,237,97,224,0,208,212,84,9,183,123,35,218,219,223,196,228,201,142,164,56,99,116,177,183,119,77,40,209,47,2,128,40,242,99,146,164,62,149,13,136,165,152,167,9,19,108,168,174,158,129,162,162,247,16,10,13,194,106,213,99,253,
250,89,35,65,34,63,38,165,216,84,34,0,152,205,194,33,183,91,174,35,226,250,88,192,229,122,17,146,164,196,19,143,30,29,154,36,34,160,162,162,8,45,45,107,208,223,31,4,0,248,253,18,116,58,17,149,149,37,112,187,195,56,125,250,53,136,34,71,73,137,5,157,157,
94,112,206,2,163,70,25,143,220,186,149,225,207,52,154,173,187,1,39,233,245,219,233,208,161,115,148,104,229,229,77,100,52,238,136,143,235,234,126,36,34,162,105,211,246,19,224,164,197,139,63,39,175,55,66,94,111,132,102,206,60,72,87,175,246,147,215,27,33,
192,73,90,173,171,33,237,140,198,62,10,11,247,230,247,247,7,91,84,149,38,101,208,153,179,113,206,126,29,63,222,250,244,141,27,27,162,25,5,0,64,126,254,182,39,194,97,229,188,170,38,191,225,30,196,24,99,119,77,38,237,179,62,223,166,27,105,5,14,31,4,131,
13,191,235,116,154,5,156,51,207,127,0,191,35,138,124,94,38,120,146,0,0,8,135,235,47,228,231,243,103,56,71,107,170,130,108,140,115,252,98,54,235,102,13,14,54,180,223,47,87,72,229,148,164,51,158,233,211,95,253,204,237,14,13,16,161,130,8,169,159,61,201,
224,94,65,224,181,138,82,190,46,26,93,59,144,77,205,125,79,191,146,18,167,190,175,79,120,69,150,105,9,145,250,156,162,96,116,172,142,49,16,231,172,155,49,252,44,138,252,120,113,177,229,68,186,197,246,192,2,18,109,202,148,189,249,221,221,17,27,99,26,42,
45,181,122,46,95,78,62,221,114,177,127,0,23,64,50,140,198,53,156,205,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* lua32_png = (const char*) temp_binary_data_1;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x68c81707:  numBytes = 337; return lua16_png;
        case 0x6bf96a41:  numBytes = 1391; return lua32_png;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "lua16_png",
    "lua32_png"
};

const char* originalFilenames[] =
{
    "lua-16.png",
    "lua-32.png"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
    {
        if (namedResourceList[i] == resourceNameUTF8)
            return originalFilenames[i];
    }

    return nullptr;
}

}
